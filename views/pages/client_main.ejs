<html lang="en">
    <% include ../partial/head %>
  <body id="page-top">
      <% include ../partial/toolbar %>
    <div id="wrapper">
      <% include ../partial/sidebar %>
      <div id="content-wrapper">
        <div class="container-fluid">
          <!-- Breadcrumbs-->
          <ol class="breadcrumb">
            <li class="breadcrumb-item">
              <a href="#">Apps</a>
            </li>
            <li class="breadcrumb-item active">List</li>
          </ol>
          <!-- Icon Cards-->
          <div class="card mb-3">
            <div class="card-body">

                  <h2><ion-icon name="list-box"></ion-icon> App List</h2>
                  <!-- icon link: https://ionicons.com/ -->
                  <p class="lead" disabled>Select the App, then run with the <kbd>READY TO RUN</kbd> button.</p>

                  <table class="table table-hover"> <!-- .table thead th -->
                    <thead>
                      <tr>
                        <th scope="col"></th>
                        <th scope="col">App name</th>
                        <th scope="col">App version</th>
                        <th scope="col">Description</th>
                        <th scope="col">Author</th>
                        <th scope="col">Email</th>
                      </tr>
                    </thead>
                    <tbody id='select_APP'>
                    </tbody>
                  </table>
                  <button type="button" class="btn btn-primary" id='ready_button' onclick='readyToRun();' disabled><b>READY TO RUN</b></button>

                  <% if (user.role == 2)  { %>
                    <button type="button" class="btn btn-dark" id="addApp" data-toggle="modal" data-target="#addModel">Add</button>
                    <button type="button" class="btn btn-dark"  id='delApp' disabled >Delete</button>
                  <% } %>
                  <div id='readyToSpark' style="display: none">
                    <hr class="my-4">

                    <h2><ion-icon name="document"></ion-icon> Data List</h2>
                    <!-- icon link: https://ionicons.com/ -->
                    <p class="lead">Select data and get results by <ion-icon name="mail"></ion-icon><b>E-mail</b> or <ion-icon name="logo-slack"></ion-icon><b>Slack</b>.</p>
                    <table class="table table-hover"> <!-- .table thead th -->
                      <thead>
                        <tr>
                          <th scope="col"></th>
                          <th scope="col">Data name</th>
                          <th scope="col">File Size</th>
                          <th scope="col">Description</th>
                          <th scope="col">Uploader</th>
                        </tr>
                      </thead>
                      <tbody id='select_data'>
                      </tbody>
                    </table>

                    <div class="alert alert-secondary" role="alert">
                        <h5><ion-icon name="add-circle"></ion-icon> App Parameters</h5>
                      <hr class="my-2">
                      <form id='parameter_blank'></form>
                    </div>

                    <div class="btn-group" id="selector" role="group" aria-label="Basic example">
                      <button type="button" value="email" id="emailBtn" class="btn btn-secondary active"><ion-icon name="mail"></ion-icon> E-mail</button>
                      <button type="button" value="slack" id="slackBtn" class="btn btn-secondary"><ion-icon name="logo-slack"></ion-icon> Slack</button>
                      <input type="text" name="sendName" class="form-control-smail" id="user" aria-describedby="emailHelp" placeholder="Input your Email">
                    </div>
                    <button type="button" class="sparkRun btn btn-Danger"><ion-icon name="play"></ion-icon><b>SPARK RUN</b></button>
                    </div>
                  </div>
                </div>
              </div>
              <!-- Modal -->
              <div id="addModel" class="modal fade" role="dialog">
                <div class="modal-dialog">

                  <!-- Modal content-->
                  <div class="modal-content">
                    <div class="modal-header">
                      <h4 class="modal-title text-center"><ion-icon name="add-circle"></ion-icon> Application Add</h4>
                      <button type="button" class="close" data-dismiss="modal">&times;</button>
                    </div>
                    <div class="modal-body">
                      <!--add file&app-->
                      <p class="lead" disabled>please choose <kbd>Application</kbd> and <kbd>Mata data</kbd></p>
                      <form action="/admin/saveApp"  method="post" enctype="multipart/form-data" id="fileForm" accept-charset="utf-8">
                        <div class="input-group mb-3">
                            <div class="input-group-prepend">
                              <span class="input-group-text">App</span>
                            </div>
                            <div class="custom-file">
                              <input type="file" class="custom-file-input" id="appFile" name="appFile" accept=".py">
                              <label class="custom-file-label" id="appFileName" for="appFile">Choose a file</label>
                            </div>
                          </div>
                        <!-- <input type='file' id='appFile' name='appFile' accept=".py"><br> -->
                        <div class="input-group mb-3">
                            <div class="input-group-prepend">
                              <span class="input-group-text">Meta</span>
                            </div>
                            <div class="custom-file">
                              <input type="file" class="custom-file-input" id="metaFile" name="appFile" accept=".json">
                              <label class="custom-file-label" id="metaFileName" for="metaFile">Choose a file</label>
                            </div>
                          </div>
                        <!-- <input type='file' id='metaFile' name='appFile' accept=".json" accept-charset="utf-8"> -->
                      </form>
                      <!-- meta JSON text -->
                      <!-- <textarea id="metaText" rows="10" cols="50"></textarea> -->
                      <div class="alert alert-secondary" role="alert">
                          <!-- <h5><ion-icon name="create"></ion-icon> App description</h5> -->
                        <hr class="my-2">
                        <div class="form-group">
                          <textarea class="form-control" id="metaText" rows="3" readonly></textarea>
                        </div>
                      </div>
                    <div class="modal-footer">
                      <button type="button" class="btn btn-Dark" id="addAppBtn"><ion-icon name="add-circle"></ion-icon> Add app</button>
                      <button type="button" class="btn btn-Dark" data-dismiss="modal"><ion-icon name="close-circle"></ion-icon> Close</button>
                    </div>
                  </div>
                </div>
              </div>

            </div>
            <!-- <div class="card-footer small text-muted">Updated yesterday at 11:59 PM</div> -->
          </div>
        </div>
        <!-- /.container-fluid -->
        <!-- Sticky Footer -->
      </div>
      <!-- /.content-wrapper -->
    </div>
    <!-- /#wrapper -->
    <!-- Scroll to Top Button-->
  
    <a class="scroll-to-top rounded" href="#page-top" style="display: none;">
      <i class="fas fa-angle-up"></i>
    </a>

    <!-- Logout Modal-->
    <div class="modal fade" id="logoutModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
      <div class="modal-dialog" role="document">
        <div class="modal-content">
          <div class="modal-header">
            <h5 class="modal-title" id="exampleModalLabel">Ready to Leave?</h5>
            <button class="close" type="button" data-dismiss="modal" aria-label="Close">
              <span aria-hidden="true">×</span>
            </button>
          </div>
          <div class="modal-body">Select "Logout" below if you are ready to end your current session.</div>
          <div class="modal-footer">
            <button class="btn btn-secondary" type="button" data-dismiss="modal">Cancel</button>
            <button class="btn btn-primary" id="logoutBtn">Logout</a>
          </div>
        </div>
      </div>
    </div>

    <!-- icon -->
    <!-- <script  src = "https://unpkg.com/ionicons@4.4.6/dist/ionicons.js" ></script> -->

    <!-- Bootstrap core JavaScript-->
    <script src="vendor/jquery/jquery.min.js"></script>
    <script src="vendor/bootstrap/js/bootstrap.bundle.min.js"></script>

    <!-- Core plugin JavaScript-->
    <script src="vendor/jquery-easing/jquery.easing.min.js"></script>

    <!-- Page level plugin JavaScript-->
    <!-- <script src="vendor/chart.js/Chart.min.js"></script>
    <script src="vendor/datatables/jquery.dataTables.js"></script>
    <script src="vendor/datatables/dataTables.bootstrap4.js"></script> -->

    <!-- Custom scripts for all pages-->
    <script src="js/sb-admin.min.js"></script>

    <!-- Demo scripts for this page-->
    <!-- <script src="js/demo/datatables-demo.js"></script> -->
    <!-- <script src="js/demo/chart-area-demo.js"></script> -->


    <script>
      //ready to run button event
      function readyToRun(){
        //if ($('#select_APP option:selected').val() == null){
        if ($('input:checkbox[id=APP_check]').is(':checked') == false){
          alert('please select Application')
        } else if($('input:checkbox[id=APP_check]:checked').length > 1){
          alert('please check only one Application')
        } else{//show
          document.all.readyToSpark.style.display=""
          makeParaBlank()
        }
      }      
      $('#logoutBtn').click(function(){
        $.ajax({
				url: '/logout',
				type: 'GET',
				success:function(result) {
          alert("success")
          location.href = "/"
				},	
				error:function(error) {
					console.log("error : " + error)	
				}
			  })
      })

      // function changeTabelColor(){
      //   $.ajax({
      //     url: '/client/makeList',
      //     method: 'post',
      //     success: function(result){
      //       var tableColor = "#0d47al"
      //       var app = document.getElementById(result.applist[0].appName);
      //       app.style.backgroundColor = "#0d47al"

      //       var x = document.getElementById("select_data")
      //             x.style.fontSize = "25px"
      //             x.style.color = "blue"
      //             x.style.backgroundColor = "yellow"
      //     }
      //   })
      // }

      function makeParaBlank(){
        $.ajax({
          url: '/client/makeParameterBlank',
          method: 'post',
          data: {
	          // 'appname' : $('#select_APP option:selected').val()
            'appname' : $('input:checkbox[id=APP_check]:checked').val()
	        },
          dataType: 'json',
          success: function(result) {
            if(result){
        	    //파라미터 입력 공간 초기화
	            $('#parameter_blank').empty();
	            parameterKey = []

	            //모든 파라미터 체크
	            for(var i=0 ; i<result.nameList.length ; i++){

	              //파라미터 키 리스트 작성
	              parameterKey[i] = result.nameList[i]

	              //파라미터 입력 타입 체크
	              if(result.typeList[i] == 'text'){
		            //text 방식 입력 공간 생성
  		            $('#parameter_blank').append(
		              result.nameList[i]+' '+'<input id='+result.nameList[i]+' type="text" placeholder=" ex) '+result.metadata.parameters[0].default+'" maxlength="'+result.typeMaxList[i]+'"> ['+result.descriptionList[i]+']'+'<br>'
		              )
	              }else if(result.typeList[i] == 'radio' || result.typeList[i] == 'checkbox'){		//make radio or checkbox blank
  		            $('#parameter_blank').append(result.nameList[i]+' ['+result.descriptionList[i]+']'+'<br>')
		              for(var j = 0 ; j < result.typeDataList[i].length ; j++){
  		              $('#parameter_blank').append(
		                '<input id='+result.nameList[i]+' type="'+result.typeList[i]+'" value='+result.typeDataList[i][j]+' name='+result.nameList[i]+'/>'+result.typeDataList[i][j]+'<br>'
		                )
		              }
	              }
    	        }
            }
          }
        })
      }

      function listRef() {
        $.ajax({
          url: '/client/makeList',
          method: 'post',
          success: function(result) {
            if(result){
              $('#select_APP').empty();
              $('#select_data').empty();

	            for(var i=0 ; i<result.applist.length ; i++){
                //$('#select_APP').append('<option value='+result.applist[i].appName+'>'+result.applist[i].appName+'</option>');
                $('#select_APP').append(
                '<tr id="'+result.applist[i].appName+'"><th scope="row"><div class="checkbox"><label style="font-size: 1em"><input type="checkbox" id="APP_check" value="'+result.applist[i].appName+'"><span class="cr"><i class="cr-icon fa fa-check"></i></span></label></div></th><td>'+result.applist[i].appName+'</td><td>'+result.applist[i].version+'</td><td>'+result.applist[i].description+'</td><td>'+result.applist[i].author.name+'</td><td>'+result.applist[i].author.email+'</td></tr><tr>'
                );
                //'<tr id="'+result.applist[i].appName+'">
                //         <th scope="row">
                //           <div class="checkbox">
                //             <label style="font-size: 1em">
                //                 <input type="checkbox" value="'+result.applist[i].appname+'" id="APP_check" >
                //                 <span class="cr"><i class="cr-icon fa fa-check"></i></span>
                //             </label>
                //           </div>
                //         </th>
                //         <td>'+result.applist[i].appname+'</td>
                //         <td>'+result.applist[i].version+'</td>
                //         <td>'+result.applist[i].description+'</td>
                //         <td>'+result.applist[i].author.name+'</td>
                //         <td>'+result.applist[i].author.email+'</td>
                //       </tr>
                // <tr>'

              }
              
	            for(var i=0 ; i<result.datalist.length ; i++){
                $('#select_data').append(
                '<tr id="'+result.datalist[i].dataName+'"><th scope="row"><div class="checkbox"><label style="font-size: 1em"><input type="checkbox" value="'+result.datalist[i].dataName+'" id="data_check"><span class="cr"><i class="cr-icon fa fa-check"></i></span></label></div></th><td>'+result.datalist[i].dataName+'</td><td>'+result.datalist[i].size+'</td><td>'+result.datalist[i].description+'</td><td>'+result.datalist[i].Uploader+'</td></tr></tr>'
                );

                // '<tr>
                //           <th scope="row">
                            
                //             <div class="checkbox">
                //               <label style="font-size: 1em">
                //                   <input type="checkbox" value="'+result.datalist[i]dataName+'" id="data_check">
                //                   <span class="cr"><i class="cr-icon fa fa-check"></i></span>
                //               </label>
                //             </div>
                            
                //           </th>
                //           <td>'+result.datalist[i].dataName+'</td>
                //           <td>'+result.datalist[i].size+'</td>
                //           <td>'+result.datalist[i].description+'</td>
                //           <td>'+result.datalist[i].Uploader+'</td>
                //         </tr>
                // </tr>'

              }
	          }
	        }
        })
      }

      function buttonDisable(){

        if($('input:checkbox[id=APP_check]:checked').length == 1){
          document.getElementById('ready_button').disabled = false
          if ('<%=user.role%>' == 2)  {
            document.getElementById('delApp').disabled = false
            document.getElementById('addApp').disabled = true
          }
        } else if ($('input:checkbox[id=APP_check]:checked').length |= 1){
          document.getElementById('ready_button').disabled = true
          document.all.readyToSpark.style.display="none"
          if ('<%=user.role%>' == 2)  {
            document.getElementById('addApp').disabled = true
          }
        }
        
        if ($('input:checkbox[id=APP_check]:checked').length == 0){
          if ('<%=user.role%>' == 2)  {
            document.getElementById('addApp').disabled = false
            document.getElementById('delApp').disabled = true
          }
        }
        
      }

      var parameterKey = new Array()
      $('#selector button').click(function() {
        $(this).addClass('active').siblings().removeClass('active');

        let emailBtnClass = document.getElementById("emailBtn").classList
        let slackBtnClass = document.getElementById("slackBtn").classList

        if(emailBtnClass[emailBtnClass.length-1] == 'active'){
          $('#user').attr('placeholder', 'Input your Email')
        } else if(slackBtnClass[slackBtnClass.length-1] == 'active'){
          $('#user').attr('placeholder', 'Input your Slack channel')
        }

      });
      $('.sparkRun').click( function() {

	      //파라미터값 초기화
      	var parameterValue = ''

	      for(var i=0 ; i < parameterKey.length ; i++){
          if($('#'+parameterKey[i]).attr('type') == 'text'){
	          parameterValue += parameterKey[i] + '=' + $('#'+parameterKey[i]).val()+' '
          }else if ($('#'+parameterKey[i]).attr('type') == 'radio' || $('#'+parameterKey[i]).attr('type') == 'checkbox'){
	
	          var checkLists = []

	          parameterValue += parameterKey[i] + '='
	          $('input[name="'+parameterKey[i]+'/"]:checked').each(function(j){
		         checkLists.push($(this).val())
	          })

	          for(var j = 0 ; j < checkLists.length ; j++){
  		        parameterValue += checkLists[j] + ' '
	          }
          }
        }
        //console.log(parameterValue)

        //예외처리
        // if($('#select_data option:selected').val() == null){
        if ($('input:checkbox[id=data_check]').is(':checked') == false){
          alert('please select data file')
        // } else if ($('#select_APP option:selected').val() == null){
        } else if($('input:checkbox[id=data_check]:checked').length > 1){
          alert('please check only one data')
        } else if($('input:checkbox[id=APP_check]:checked').length > 1){
          alert('please check only one Application')
        }else if ($('input:checkbox[id=APP_check]').is(':checked') == false){
          alert('please select Application')
        } else{
          var check = confirm("Do you want running selected app?")
          if(check){
            //console.log($(".btn-group > button.active").val())
            $.ajax({
            url: '/client/sparkSubmit',
            method: 'post',
            data: {
				    	'APP' : $('input:checkbox[id=APP_check]:checked').val(),
				    	'data' : $('input:checkbox[id=data_check]:checked').val(),
				    	'parameter' : parameterValue,
              //'target': $('input[name="sendRadio"]:checked').val(),
              'target': $(".btn-group > button.active").val(),
					    'user' : $('#user').val()
				    },
            dataType: 'json',
            success: function(result) {
              if(result){
                $('.result').html(result.result);
              }
            }
            })
            location.replace("app_status")
          }
          }
        })

      $(document).ready(function(){
        listRef();
      })



      $('#select_APP').click(function(){
        buttonDisable()
      })

      $('#delApp').click(function(){
            var check = confirm("Do you want delete checked app?")
            
            if(check) {
              for(var i = 0 ; i < $('input:checkbox[id=APP_check]:checked').length ; i++){
                
                var selectedApp = $('input:checkbox[id=APP_check]:checked')[i].value
                $.ajax({
                    url: "/admin/delApp",
                    dataType: "json",
                    method: "get",
                    data : {"id" : selectedApp},
                    success: function(result) {
                        if(!result.result) {
                            alert("failed metadata delete ")
                        } else {
                          listRef()
                          buttonDisable()
                        }
                    }, 
                    error : function(error) {
                        console.log(error)
                    }
                })
              }            
            }
        })

        $('#addAppBtn').click(function() {

          info = JSON.parse($('#metaText').html())

          var appValue = $('#appFile').val().split("\\");
          info.appName = appValue[appValue.length-1];
          var jsonValue = $('#metaFile').val().split("\\")
          if (appValue[appValue.length-1].split(".")[0] == jsonValue[jsonValue.length-1].split(".")[0]) {
              //app data
              var form = $('#fileForm')[0];
              var formData = new FormData(form);
            
              formData.append("metaFile",$('#metaFile'))
              //save : app(.py..) + parameterFile(.json..) in mongodb 
              $.ajax({
                  url: '/admin/saveApp',
                  data: formData,
                  method: 'POST',
                  processData: false,
                  contentType: false,
                  success: function (result) {
                      if(result.status) {
                          alert("App 업로드에 성공하였습니다.")
                      } else {
                          alert(result.result)
                      }
                      listRef()
                  },
                  error: function (err) {
                      console.log(err);
                  }
                });       
              } else {
                  alert("please same file name")
              }
        })
        var info ={
            "appName": "",
            "description": "",
            "author": {
                "name" : "",
                "email" : ""
            },
            "parameters": [],
            "version" :  "",
            "type" : ""
        }

        function readTextFile(file, callback) {
            var rawFile = new XMLHttpRequest();
                    rawFile.overrideMimeType("application/json;charset=euc-kr");
                    rawFile.open("GET", file, true);
                    rawFile.onreadystatechange = function() {
                    if (rawFile.readyState === 4 && rawFile.status == "200") {
                        callback(rawFile.responseText);
                }
            }
            rawFile.send(null);
        }

        $('#appFile').change(function() {
            document.getElementById("appFileName").innerHTML = appFile.files[0].name
        })

        
        $('#metaFile').change(function(e) {

            document.getElementById("metaFileName").innerHTML = metaFile.files[0].name

            const files = e.target.files;
            // console.log(files)
            if(files && files.length > 0) {
                const targetFile = files[0]
                try {
                    const path = window.URL.createObjectURL(targetFile)
                    readTextFile(path, function(text){
                        $('#metaText').html(text)
                    })
                    $.getJSON(path, function(data) {
                        info.appName = data.appName
                        info.description = data.description
                        info.author.name = data.author.name
                        info.author.email = data.author.email
                        info.version = data.version
                        info.type = data.type
                        
                        var inputParameters = []

                        try {
                        if (data.parameters.length > 0) {
                            for (var i in data.parameters) {
                                inputParameters.push(data.parameters[i])
                            }
                        }
                    } catch (e) {
                        console.log(e)
                        }
                        info.parameters = inputParameters
                    })
                }
                catch(ex) {
                    console.log(ex)
                    try {
                        const fileReader = new FileReader();
                        fileReader.onload = (event) =>  {
                            console.log("fileReader " + event.target.result)
                        }
                        fileReader.readAsDataURL(targetFile)
                    }
                    catch (e) {
                        console.log("file upload not supported : ")
                    }
                }
            }
        })
    </script>

</body></html>
